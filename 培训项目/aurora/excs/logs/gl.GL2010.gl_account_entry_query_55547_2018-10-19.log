2018-10-19 09:45:35.893 [aurora.application.session_check] [CONFIG] Session data copied to context
2018-10-19 09:45:35.893 [aurora.application.session_check] [CONFIG] Checking BM access gl.GL2010.gl_account_entry for operation query
2018-10-19 09:45:35.895 [aurora.application.session_check] [CONFIG] Result from aurora.bm.DefaultAccessChecker@676ae003 is true
2018-10-19 09:45:35.895 [uncertain.proc] [CONFIG] [action] AccessCheck
2018-10-19 09:45:35.896 [uncertain.proc] [CONFIG] [action] CheckServiceLock
2018-10-19 09:45:35.896 [uncertain.proc] [CONFIG] [action] ParseParameter
2018-10-19 09:45:35.896 [uncertain.proc] [CONFIG] [action] ValidateInput
2018-10-19 09:45:35.896 [uncertain.proc] [CONFIG] [action] InvokeService
2018-10-19 09:45:35.896 [aurora.database] [CONFIG] ===================================== prepare to run model-query gl.GL2010.gl_account_entry==============================
2018-10-19 09:45:35.901 [uncertain.proc] [CONFIG] [action] DecideSqlGenerationMode
2018-10-19 09:45:35.901 [uncertain.proc] [FINE] aurora.database.service.BusinessModelService.onDecideSqlGenerationMode
2018-10-19 09:45:35.901 [uncertain.proc] [CONFIG] [action] CreateOperationSql
2018-10-19 09:45:35.901 [uncertain.proc] [CONFIG] [action] PopulateOperationSql
2018-10-19 09:45:35.901 [uncertain.proc] [FINE] aurora.database.features.OrderByClauseCreator.onPopulateOperationSql
2018-10-19 09:45:35.901 [uncertain.proc] [FINE] aurora.database.features.WhereClauseCreator.onPopulateOperationSql
2018-10-19 09:45:35.901 [uncertain.proc] [CONFIG] [action] ExecuteQuery
2018-10-19 09:45:35.901 [uncertain.proc] [FINE] aurora.bm.QuerySqlCreator.onExecuteQuery
2018-10-19 09:45:35.908 [uncertain.proc] [CONFIG] [action] QueryFinish
2018-10-19 09:45:35.908 [uncertain.proc] [FINE] aurora.database.features.AutoQueryCounter.onQueryFinish
2018-10-19 09:45:35.911 [uncertain.proc] [CONFIG] [action] FetchResultSet
2018-10-19 09:45:35.911 [uncertain.proc] [FINE] aurora.database.features.CacheBasedLookUpField.postFetchResultSet
2018-10-19 09:45:35.911 [aurora.database] [CONFIG] 
============= BEGIN [query] SQL Statement execution dump ============

                SELECT
                    *
                FROM
                    ( WITH
                    comp_temp AS
                    (SELECT
                        fc.company_code
                    FROM
                        fnd_companies fc
                    WHERE
                        fc.company_id = ?
                    UNION ALL
                    SELECT
                        fc2.company_code
                    FROM
                        fnd_companies fc2
                    WHERE
                        fc2.parent_company_id  = ? AND
                        ? = 'Y'
                    UNION ALL
                    SELECT
                        fc2.company_code
                    FROM
                        fnd_companies fc2
                    WHERE
                        fc2.parent_company_id IN
                        (SELECT
                            fc3.company_id
                        FROM
                            fnd_companies fc3
                        WHERE
                            fc3.parent_company_id = ?
                        ) AND
                        ? = 'Y'
                    )
                SELECT
                    t1.ACCOUNT_ENTRY_ID,
                    t1.HEC_SOB_CODE,
                    t1.COMPANY_ID,
                    t1.COMPANY_CODE,
                    t1.TRANSACTION_TYPE,
                    (SELECT
                        scv.code_value_name
                    FROM
                        sys_codes sc,
                        sys_code_values_vl scv
                    WHERE
                        sc.code       ='GL_DOCUMENT_CATEGORY' AND
                        sc.code_id    =scv.code_id AND
                        scv.code_value=t1.transaction_type
                    ) AS transaction_type_desc,
                    t1.TRANSACTION_HEADER_ID,
                    t1.TRANSACTION_LINE_ID,
                    t1.TRANSACTION_DIST_ID,
                    t1.TRANSACTION_JE_LINE_ID,
                    t1.TRANSACTION_NUMBER,
                    t1.JOURNAL_CATEGORY,
                    t1.PERIOD_NAME,
                    t1.PERIOD_YEAR,
                    t1.PERIOD_NUM,
                    t1.DESCRIPTION,
                    t1.TRANSACTION_DATE,
                    t1.ACCOUNTING_DATE,
                    t1.ATTACHMENT_NUM,
                    t1.LINE_DESCRIPTION,
                    t1.ACCOUNT_ID,
                    t1.ACCOUNT_CODE,
                    t1.ENTERED_AMOUNT_DR,
                    t1.ENTERED_AMOUNT_CR,
                    t1.FUNCTIONAL_AMOUNT_DR,
                    t1.FUNCTIONAL_AMOUNT_CR,
                    (SELECT
                        gcl.CURRENCY_NAME
                    FROM
                        gld_currency_vl gcl
                    WHERE
                        gcl.currency_code=t1.currency_code
                    ) AS currency_name,
                    t1.CURRENCY_CODE,
                    t1.CURRENCY_CONVERSION_DATE,
                    t1.CURRENCY_CONVERSION_RATE,
                    t1.CURRENCY_CONVERSION_TYPE,
                    t1.REVERSE_FLAG,
                    t1.REVERSE_TRANSACTION_ID,
                    t1.SEGMENT1,
                    t1.SEGMENT2,
                    t1.SEGMENT3,
                    t1.SEGMENT4,
                    t1.SEGMENT5,
                    t1.SEGMENT6,
                    t1.SEGMENT7,
                    t1.SEGMENT8,
                    t1.SEGMENT9,
                    t1.SEGMENT10,
                    t1.SEGMENT11,
                    t1.SEGMENT12,
                    t1.SEGMENT13,
                    t1.SEGMENT14,
                    t1.SEGMENT15,
                    t1.SEGMENT16,
                    t1.SEGMENT17,
                    t1.SEGMENT18,
                    t1.SEGMENT19,
                    t1.SEGMENT20,
                    t1.SEGMENT_DESC1,
                    t1.SEGMENT_DESC2,
                    t1.SEGMENT_DESC3,
                    t1.SEGMENT_DESC4,
                    t1.SEGMENT_DESC5,
                    t1.SEGMENT_DESC6,
                    t1.SEGMENT_DESC7,
                    t1.SEGMENT_DESC8,
                    t1.SEGMENT_DESC9,
                    t1.SEGMENT_DESC10,
                    t1.SEGMENT_DESC11,
                    t1.SEGMENT_DESC12,
                    t1.SEGMENT_DESC13,
                    t1.SEGMENT_DESC14,
                    t1.SEGMENT_DESC15,
                    t1.SEGMENT_DESC16,
                    t1.SEGMENT_DESC17,
                    t1.SEGMENT_DESC18,
                    t1.SEGMENT_DESC19,
                    t1.SEGMENT_DESC20,
                    t1.ATTRIBUTE1,
                    t1.ATTRIBUTE2,
                    t1.ATTRIBUTE3,
                    t1.ATTRIBUTE4,
                    t1.ATTRIBUTE5,
                    t1.ATTRIBUTE6,
                    t1.ATTRIBUTE7,
                    t1.ATTRIBUTE8,
                    t1.ATTRIBUTE9,
                    t1.ATTRIBUTE10,
                    t1.ATTRIBUTE11,
                    t1.ATTRIBUTE12,
                    substr(t1.ATTRIBUTE12, 0, 2) doc_type,
                    decode(substr(t1.ATTRIBUTE12, 0, 2),
		              'BX',
		              (select h.exp_report_header_id
		                 from exp_report_headers h
		                where h.exp_report_number = t1.ATTRIBUTE12),
		              'JK',
		              (select ch.payment_requisition_header_id
		                 from csh_payment_requisition_hds ch
		                where ch.requisition_number = t1.ATTRIBUTE12),
		              'FK',
		              (select ah.acp_requisition_header_id
		                 from acp_acp_requisition_hds ah
		                where ah.requisition_number = t1.ATTRIBUTE12),
		                '') doc_header_id,
                    t1.ATTRIBUTE13,
                    t1.ATTRIBUTE14,
                    t1.ATTRIBUTE15,
                    t1.ATTRIBUTE16,
                    t1.ATTRIBUTE17,
                    t1.ATTRIBUTE18,
                    t1.ATTRIBUTE19,
                    t1.ATTRIBUTE20,
                    t1.BATCH_CODE,
                    t1.GL_INTERFACE_ID,
                    t1.IMPORTED_FLAG,
                    DECODE(t1.imported_flag,'N','不传送','P','待传送','Y','SUN已过账','G','暂挂','U','已导入SUN','E','SUN过账失败') imported_flag_desc,
                    t1.IMPORT_DATE,
                    t1.JOURNAL_NUMBER,
                    t1.ERROR_CODE,
                    t1.ERROR_MESSAGE,
                    t1.QUERY_BATCH_CODE,
                    (SELECT
                        t1.segment1
                        ||'-'
                        ||f.company_short_name
                    FROM
                        fnd_companies_vl f
                    WHERE
                        f.company_code = t1.segment1
                    ) AS segment1_de,
                    (SELECT
                        f.responsibility_center_code
                        ||'-'
                        ||f.responsibility_center_name
                    FROM
                        fnd_responsibility_centers_vl f
                    WHERE
                        f.company_id                 = t1.company_id AND
                        f.responsibility_center_code = t1.segment2
                    ) AS segment2_de,
                    (SELECT
                        g.ACCOUNT_CODE
                        ||'-'
                        ||g.DESCRIPTION
                    FROM
                        gld_accounts_vl g
                    WHERE
                        g.ACCOUNT_CODE = t1.segment3
                    ) AS segment3_de,
                    /* NULL je_category, */
                    (select cux_gl_interface_pkg.get_je_category_name(t1.transaction_type, t1.ATTRIBUTE12) from dual) je_category,
                    (
                    SELECT
                        erl.invoice_code
                    FROM
                        exp_report_dists erd,
                        exp_report_lines erl
                    WHERE
                        t1.transaction_type    = upper('exp_report') AND
                        t1.transaction_dist_id = erd.exp_report_dists_id AND
                        erl.exp_report_line_id = erd.exp_report_line_id
                    ) invoice_code,
                    (SELECT
                        erl.invoice_number
                    FROM
                        exp_report_dists erd,
                        exp_report_lines erl
                    WHERE
                        t1.transaction_type    = upper('exp_report') AND
                        t1.transaction_dist_id = erd.exp_report_dists_id AND
                        erl.exp_report_line_id = erd.exp_report_line_id
                    ) invoice_number
                FROM
                    GL_ACCOUNT_ENTRY t1
                WHERE
                    t1.segment1 IN
                    (SELECT * FROM comp_temp
                    )
                    ) t1  WHERE t1.hec_sob_code like '%'||?||'%' AND t1.attribute12 like ? ORDER BY transaction_number,entered_amount_cr desc
            
---------------------Binding info---------------------
No.1	Access path:/session/@company_id	Data type of passed value :java.lang.String	Value:2240	Output:false	Database Type:null	
No.2	Access path:/session/@company_id	Data type of passed value :java.lang.String	Value:2240	Output:false	Database Type:null	
No.3	Access path:@include_child_flag	Data type of passed value :java.lang.String	Value:N	Output:false	Database Type:null	
No.4	Access path:/session/@company_id	Data type of passed value :java.lang.String	Value:2240	Output:false	Database Type:null	
No.5	Access path:@include_child_flag	Data type of passed value :java.lang.String	Value:N	Output:false	Database Type:null	
No.6	Access path:@set_of_books_code	Data type of passed value :java.lang.String	Value:CCBL_LEDGER	Output:false	Database Type:null	
No.7	Access path:@attribute12	Data type of passed value :java.lang.String	Value:BX8606000181000004	Output:false	Database Type:null	

=============== END [query] SQL Statement execution dump ============

2018-10-19 09:45:35.911 [uncertain.proc] [CONFIG] [action] CreateSuccessResponse
