2018-10-17 09:26:55.604 [aurora.application.session_check] [CONFIG] Session data copied to context
2018-10-17 09:26:55.605 [aurora.application.session_check] [CONFIG] Checking BM access expm.exp_report_audit_reject_query for operation query
2018-10-17 09:26:55.608 [aurora.application.session_check] [CONFIG] Result from aurora.bm.DefaultAccessChecker@577d1ce6 is true
2018-10-17 09:26:55.608 [uncertain.proc] [CONFIG] [action] AccessCheck
2018-10-17 09:26:55.610 [uncertain.proc] [CONFIG] [action] CheckServiceLock
2018-10-17 09:26:55.610 [uncertain.proc] [CONFIG] [action] ParseParameter
2018-10-17 09:26:55.610 [uncertain.proc] [CONFIG] [action] ValidateInput
2018-10-17 09:26:55.610 [uncertain.proc] [CONFIG] [action] InvokeService
2018-10-17 09:26:55.610 [aurora.database] [CONFIG] ===================================== prepare to run model-query expm.exp_report_audit_reject_query==============================
2018-10-17 09:26:55.616 [uncertain.proc] [CONFIG] [action] DecideSqlGenerationMode
2018-10-17 09:26:55.616 [uncertain.proc] [FINE] aurora.database.service.BusinessModelService.onDecideSqlGenerationMode
2018-10-17 09:26:55.616 [uncertain.proc] [CONFIG] [action] CreateOperationSql
2018-10-17 09:26:55.616 [uncertain.proc] [CONFIG] [action] PopulateOperationSql
2018-10-17 09:26:55.616 [uncertain.proc] [FINE] aurora.database.features.OrderByClauseCreator.onPopulateOperationSql
2018-10-17 09:26:55.616 [uncertain.proc] [FINE] aurora.database.features.WhereClauseCreator.onPopulateOperationSql
2018-10-17 09:26:55.616 [uncertain.proc] [CONFIG] [action] ExecuteQuery
2018-10-17 09:26:55.616 [uncertain.proc] [FINE] aurora.bm.QuerySqlCreator.onExecuteQuery
2018-10-17 09:26:56.18 [uncertain.proc] [CONFIG] [action] QueryFinish
2018-10-17 09:26:56.18 [uncertain.proc] [FINE] aurora.database.features.AutoQueryCounter.onQueryFinish
2018-10-17 09:26:56.118 [uncertain.proc] [CONFIG] [action] FetchResultSet
2018-10-17 09:26:56.119 [uncertain.proc] [FINE] aurora.database.features.CacheBasedLookUpField.postFetchResultSet
2018-10-17 09:26:56.119 [aurora.database] [CONFIG] 
============= BEGIN [query] SQL Statement execution dump ============

                SELECT
                    *
                FROM
                    (SELECT
                        s.exp_report_header_id,
                        (SELECT
                            cch.contract_number
                        FROM
                            con_contract_headers cch,
                            con_document_flows s
                        WHERE
                            contract_header_id     = s.document_id AND
                            s.document_type        = 'CON_CONTRACT_HEADERS' AND
                            s.source_document_type = 'EXP_REPORT_HEADERS' AND
                            s.source_document_id   = s.exp_report_header_id
                        ) contact_number,
                        s.exp_report_number exp_requisition_number,
                        s.employee_id,
                        s.audit_flag,
                        TO_CHAR(s.audit_date, 'yyyy-mm-dd') audit_date,
                        (SELECT
                            employee_code
                        FROM
                            exp_employees es
                        WHERE
                            es.employee_id = s.employee_id
                        ) employee_code,
                        (SELECT name FROM exp_employees es WHERE es.employee_id = s.employee_id
                        ) employee_name,
                        s.payee_category,
                        (SELECT
                            code_value_name
                        FROM
                            sys_code_values_vl b,
                            sys_codes a
                        WHERE
                            b.code_id  = a.code_id AND
                            a.code     = 'PAYMENT_OBJECT' AND
                            code_value = s.payee_category
                        ) payee_category_name,
                        s.payee_id,
                        DECODE(s.payee_category, 'EMPLOYEE',
                        (SELECT
                            employee_code
                            || '-'
                            || name
                        FROM
                            exp_employees ee
                        WHERE
                            ee.employee_id = s.payee_id
                        ), 'CUSTOMER',
                        (SELECT
                            vc.customer_code
                            || '-'
                            || vc.description
                        FROM
                            ord_system_customers_vl vc
                        WHERE
                            vc.customer_id = s.payee_id
                        ),
                        (SELECT
                            vv.vender_code
                            || '-'
                            || vv.description
                        FROM
                            pur_system_venders_vl vv
                        WHERE
                            vv.vender_id = s.payee_id
                        )) payee_name,
                        s.currency_code,
                        (SELECT
                            currency_name
                        FROM
                            gld_currency_vl gcv
                        WHERE
                            gcv.currency_code = s.currency_code
                        ) currency_name,
                        s.exchange_rate_type,
                        s.exchange_rate_quotation,
                        (SELECT
                            SUM(t.report_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num,
                        (SELECT
                            SUM(t.report_functional_amount)
                        FROM
                            exp_report_lines t
                        WHERE
                            t.exp_report_header_id = s.exp_report_header_id
                        ) quarter_num_fun,
                        s.period_name,
                        s.je_creation_status,
                        s.gld_interface_flag,
                        s.created_by,
                        s.last_updated_by,
                        s.last_update_date,
                        TO_CHAR(s.report_date, 'YYYY-MM-DD') requisition_date,
                        s.exp_report_type_id exp_requisition_type_id,
                        (SELECT
                            erpv.description
                        FROM
                            exp_expense_report_types_vl erpv
                        WHERE
                            erpv.expense_report_type_id = s.exp_report_type_id
                        ) type_description,
                        (SELECT
                            erpv.expense_requisition_type_code
                        FROM
                            exp_expense_req_types_vl erpv
                        WHERE
                            erpv.expense_requisition_type_id = s.exp_report_type_id
                        ) type_code,
                        s.description,
                        s.report_status requisition_status_value,
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       = 'EXP_EXPENSE_REPORT_STATUS' AND
                            b.code_value = s.report_status
                        ) REQUISITION_STATUS,
                        s.creation_date,
                        TO_CHAR(s.creation_date, 'yyyy-mm-dd') creation_date1,
                        
                        /*(SELECT
                            NVL(SUM(w.csh_write_off_amount), 0)
                        FROM
                            csh_write_off w
                        WHERE
                            w.document_source    = 'EXPENSE_REPORT' AND
                            w.document_header_id = s.exp_report_header_id
                        ) payed_amount,*/
                        
                        --Add by xielj 20180531单据支付提交后，报销单查询已付金额有值，应该在支付成功后才变更
                        (SELECT NVL(SUM(w.csh_write_off_amount), 0)
                  		   FROM csh_write_off w,
                       		    CSH_TRANSACTION_V ctv,
                       			csh_transaction_lines ctl
                 		  WHERE w.document_source = 'EXPENSE_REPORT'
                   			AND w.document_header_id = s.exp_report_header_id
                   			AND ctv.transaction_header_id = ctl.transaction_header_id
                   			AND w.csh_transaction_line_id = ctl.transaction_line_id
                   			AND ctv.pay_status_desc = 0) payed_amount,
                        
                        (SELECT
                            SUM(erps.due_amount)
                        FROM
                            exp_report_pmt_schedules erps
                        WHERE
                            erps.exp_report_header_id = s.exp_report_header_id
                        ) -
                        (SELECT NVL(SUM(w.csh_write_off_amount), 0)
                  		   FROM csh_write_off w,
                       		    CSH_TRANSACTION_V ctv,
                       			csh_transaction_lines ctl
                 		  WHERE w.document_source = 'EXPENSE_REPORT'
                   			AND w.document_header_id = s.exp_report_header_id
                   			AND ctv.transaction_header_id = ctl.transaction_header_id
                   			AND w.csh_transaction_line_id = ctl.transaction_line_id
                   			AND ctv.pay_status_desc = 0) unpayment_amount,
                        (SELECT
                            tv.report_name
                        FROM
                            exp_expense_report_types_vl tv
                        WHERE
                            tv.expense_report_type_id = s.exp_report_type_id
                        ) report_name,
                        (SELECT
                            sr.param_name
                        FROM
                            exp_expense_report_types_vl tv,
                            sys_reports sr
                        WHERE
                            tv.expense_report_type_id = s.exp_report_type_id AND
                            tv.report_name            = sr.report_name AND
                            rownum                    = 1
                        ) report_param_name,
                        NVL(s.reversed_flag,'N') reversed_flag,
                        (SELECT
                            b.code_value_name
                        FROM
                            sys_codes_vl a,
                            sys_code_values_vl b
                        WHERE
                            a.code_id    = b.code_id AND
                            a.code       ='CSH_REVERSE_SELECT' AND
                            b.code_value = NVL(s.reversed_flag,'N')
                        ) reversed_flag_name,
                        DECODE(s.reversed_flag, 'W',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.source_exp_rep_header_id = s.exp_report_header_id
                        ), '') reverse_number,
                        DECODE(s.reversed_flag, 'R',
                        (SELECT
                            h.exp_report_number
                        FROM
                            exp_report_headers h
                        WHERE
                            h.exp_report_header_id = s.source_exp_rep_header_id
                        ), '') reversed_number,
                        pv.page_name,                  
			             (case when (select count(1)
				                from exp_report_lines erl
				               where  erl.exp_report_header_id = s.exp_report_header_id) = 0 then '否'
				               when (select  count(1)
			                        from  exp_report_lines l,exp_ygz_invoice_types it
			                        where l.exp_report_header_id = s.exp_report_header_id
			                        and l.invoice_type = it.type_code
			                        and it.special_invoice = 'Y'
			                         ) = 0 then '否'
				               when (select  count(1)
			                        from  exp_report_lines l,exp_ygz_invoice_types it
			                        where l.exp_report_header_id = s.exp_report_header_id
			                        and l.invoice_type = it.type_code
			                        and it.special_invoice = 'Y'
			                        and l.tax_audit_flag = 'Y'  ) = (select  count(1)
			                        from  exp_report_lines l,exp_ygz_invoice_types it
			                        where l.exp_report_header_id = s.exp_report_header_id
			                        and l.invoice_type = it.type_code
			                        and it.special_invoice = 'Y'
			                         ) then '是'
			                        else '否' end )tax_audit_flag_desc
                    FROM
                        exp_report_headers s,
                        exp_expense_report_types ert,
                        exp_report_type_pages_v pv
                    WHERE
                        s.company_id                                                                                = ? AND
                        ert.expense_report_type_id                                                                  = s.exp_report_type_id AND
                        ert.document_page_type                                                                      = pv.page_type AND
                        pv.page_usage                                                                               = 'QUERY' AND
                        DECODE(?, NULL, 0, 1)                                                           = DECODE(?, NULL, 0, DECODE(report_status, 'GENERATE', 1, 'REJECTED', 1, 'TAKEN_BACK', 1, 0)) AND
                        sys_user_secure_exit_pkg.exp_report_update(s.exp_report_header_id, ?) = 'Y' AND
                        ? in (select his.user_id from exp_document_histories his where his.document_type = 'EXP_REPORT' and his.document_id = s.exp_report_header_id and his.operation_code = 'AUDIT_REJECT' )
                    ) v 
                ORDER BY
                    exp_report_header_id DESC
            
---------------------Binding info---------------------
No.1	Access path:/session/@company_id	Data type of passed value :java.lang.String	Value:835	Output:false	Database Type:null	
No.2	Access path:@authority	Data type of passed value :[null]	Value:null	Output:false	Database Type:null	
No.3	Access path:@authority	Data type of passed value :[null]	Value:null	Output:false	Database Type:null	
No.4	Access path:/session/@session_id	Data type of passed value :java.lang.Long	Value:55496	Output:false	Database Type:null	
No.5	Access path:/session/@user_id	Data type of passed value :java.lang.Long	Value:1	Output:false	Database Type:null	

=============== END [query] SQL Statement execution dump ============

2018-10-17 09:26:56.119 [uncertain.proc] [CONFIG] [action] CreateSuccessResponse
